QUE1) Given a table of candidates and their skills, you're tasked with finding the candidates best suited for an open Data Science job.You want to find candidates who are proficient in Python, Tableau, and PostgreSQL. 
Write a query to list the candidates who possess all of the required skills for the job. Sort the the output by candidate ID in ascending order.

SELECT candidate_id
FROM candidates
WHERE skill IN ('Python','Tableau','PostgreSQL')
GROUP BY candidate_id
HAVING COUNT(skill) = 3
ORDER BY candidate_id;

QUE2) Assume you are given the tables below about Facebook pages and page likes. 
Write a query to return the page IDs of all the Facebook pages that don't have any likes. The output should be in ascending order.

SELECT pages.page_id
FROM pages
LEFT OUTER JOIN page_likes AS pg
ON pages.page_id = pg.page_id
WHERE pg.page_id IS NULL;

QUE3) Tesla is investigating bottlenecks in their production, and they need your help to extract the relevant data. 
Write a SQL query that determines which parts have begun the assembly process but are not yet finished.

SELECT part
FROM parts_assembly
WHERE finish_date is NULL
GROUP BY part;


HackerRank que>
QUE4) Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA.
The CITY table is described as follows:

select * from city
where countrycode = 'USA' and population > 100000

QUE5) Query the NAME field for all American cities in the CITY table with populations larger than 120000. The CountryCode for America is USA.
The CITY table is described as follows:

select NAME from city
where countrycode= 'USA' and population > 120000

QUE6) Query all columns (attributes) for every row in the CITY table. The CITY table is described as follows:
select * from city

QUE7) Query all columns for a city in CITY with the ID 1661.
select * from city
where ID= 1661

QUE8) Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.

select * from city
where countrycode = 'JPN'

QUE9) Query a list of CITY and STATE from the STATION table.
select city, state from station

QUE10) Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer

select distinct city from station 
where MOD (id,2)=0 
ORDER BY CITY ;

QUE11) Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.
The STATION table is described as follows:

select count(CITY)- count(distinct CITY) from station;

QUE12) Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name).
If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.
The STATION table is described as follows:

select CITY,LENGTH(CITY) from STATION order by Length(CITY) asc, CITY limit 1; 
select CITY,LENGTH(CITY) from STATION order by Length(CITY) desc, CITY limit 1; 

QUE13)Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

select city from station 
where city REGEXP "^[aeiou].*" 
order by city;

QUE14) Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.
SELECT DISTINCT CITY FROM STATION 
WHERE CITY REGEXP '[aeiouAEIOU]$';

QUE15) Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. 
Your result cannot contain duplicates.

SELECT DISTINCT city
FROM   station
WHERE  city RLIKE '^[aeiouAEIOU].*[aeiouAEIOU]$'

QUE16) Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY 
FROM STATION 
WHERE CITY NOT RLIKE '^[aeiouAEIOU].*$'

QUE17) Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY
FROM STATION
WHERE CITY NOT REGEXP '[aeiou]$'








